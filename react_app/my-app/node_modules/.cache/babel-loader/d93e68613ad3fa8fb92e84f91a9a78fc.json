{"ast":null,"code":"var _jsxFileName = \"/Users/rahulnarla/Documents/Applications/compare-crypto-exchanges/react_app/my-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport logo from \"./logo.svg\";\nimport { getCoinbasePrice, getCryptoPrice } from './common/APIUtils';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = props => {\n  _s();\n\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [data, setData] = useState([]);\n  let coinbasePrice = {};\n  getCoinbasePrice('eth').then(data => {\n    coinbasePrice = data;\n  });\n  let cryptoPrice = {};\n  getCryptoPrice('eth').then(data => {\n    cryptoPrice = data;\n  });\n  console.log(coinbasePrice);\n  console.log(cryptoPrice);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: 0\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: 0\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"KHbBQTTO/SPs3azn38yiWvydAb4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/rahulnarla/Documents/Applications/compare-crypto-exchanges/react_app/my-app/src/App.js"],"names":["React","useState","useEffect","getCoinbasePrice","getCryptoPrice","App","props","isLoaded","setIsLoaded","data","setData","coinbasePrice","then","cryptoPrice","console","log","logo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;AAEA,SAAQC,gBAAR,EAA0BC,cAA1B,QAA+C,mBAA/C;AACA,OAAO,WAAP;;;AAEA,MAAMC,GAAG,GAAIC,KAAD,IAAW;AAAA;;AACrB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;AAEA,MAAIU,aAAa,GAAG,EAApB;AACAR,EAAAA,gBAAgB,CAAC,KAAD,CAAhB,CAAwBS,IAAxB,CAA8BH,IAAD,IAAU;AACrCE,IAAAA,aAAa,GAAGF,IAAhB;AACD,GAFD;AAGA,MAAII,WAAW,GAAG,EAAlB;AACAT,EAAAA,cAAc,CAAC,KAAD,CAAd,CAAsBQ,IAAtB,CAA4BH,IAAD,IAAU;AACnCI,IAAAA,WAAW,GAAGJ,IAAd;AACD,GAFD;AAIAK,EAAAA,OAAO,CAACC,GAAR,CAAYJ,aAAZ;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYF,WAAZ;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,8BACE;AAAK,QAAA,GAAG,EAAEG,IAAV;AAAgB,QAAA,SAAS,EAAC,UAA1B;AAAqC,QAAA,GAAG,EAAC;AAAzC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBACG;AADH;AAAA;AAAA;AAAA;AAAA,cAFF,eAKE;AAAA,kBACG;AADH;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CA7BD;;GAAMX,G;;KAAAA,G;AA+BN,eAAeA,GAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport logo from './logo.svg';\nimport {getCoinbasePrice, getCryptoPrice} from './common/APIUtils';\nimport './App.css';\n\nconst App = (props) => {\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [data, setData] = useState([]);\n\n  let coinbasePrice = {};\n  getCoinbasePrice('eth').then((data) => {\n    coinbasePrice = data;\n  });\n  let cryptoPrice = {};\n  getCryptoPrice('eth').then((data) => {\n    cryptoPrice = data;\n  });\n\n  console.log(coinbasePrice);\n  console.log(cryptoPrice);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          {0}\n        </p>\n        <p>\n          {0}\n        </p>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}