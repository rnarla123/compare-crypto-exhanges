{"ast":null,"code":"var _jsxFileName = \"/Users/rahulnarla/Documents/Applications/compare-crypto-exchanges/react_app/my-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { styled } from '@mui/material/styles';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\nimport Box from '@mui/material/Box';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport { base, cryptoCurrency } from './common/APIUtils';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Item = styled(Paper)(_ref => {\n  let {\n    theme\n  } = _ref;\n  return { ...theme.typography.body2,\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary\n  };\n});\n\nconst App = props => {\n  _s();\n\n  // State Management\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [data, setData] = useState([]);\n  const [currency, setCurrency] = useState('btc'); // Event Functions\n\n  const handleCryptoChange = event => {\n    setCurrency(event.target.value);\n    reloadPrices(event.target.value);\n  };\n\n  function reloadPrices(curr) {\n    fetch(`${base}/compare/${curr}`, {\n      method: 'GET'\n    }).then(response => response.json()).then(data => {\n      setData(data);\n      setIsLoaded(true);\n      console.log(data);\n    }).catch(error => {\n      setIsLoaded(true);\n      setError(error);\n    });\n  }\n\n  useEffect(() => {\n    reloadPrices(currency);\n  }, []); // Render Page\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 12\n    }, this);\n  } else if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Compare Crypto Exchanges\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          style: {\n            width: '150px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: \"Crypto Currency\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: currency,\n            label: \"Crypto Currency\",\n            onChange: handleCryptoChange,\n            children: cryptoCurrency.map((data, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: data.abbr,\n              children: data.name\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Recommendation: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Buy: \", data['buy']]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Sell: \", data['sell']]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => reloadPrices(currency),\n        children: \"Reload Prices\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        style: {\n          height: '300px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(Item, {\n            style: {\n              height: '75%'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Coinbase\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Buy Price: \", data['coinbase']['buy']]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Sell Price: \", data['coinbase']['sell']]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(Item, {\n            style: {\n              height: '75%'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Crypto.com\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Buy Price: \", data['crypto']['buy']]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Sell Price: \", data['crypto']['sell']]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(App, \"19HibeRo8x1gTU2kDuVSxzXkmgo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/rahulnarla/Documents/Applications/compare-crypto-exchanges/react_app/my-app/src/App.js"],"names":["React","useState","useEffect","styled","Paper","Grid","Button","Box","InputLabel","MenuItem","FormControl","Select","base","cryptoCurrency","Item","theme","typography","body2","padding","spacing","textAlign","color","palette","text","secondary","App","props","error","setError","isLoaded","setIsLoaded","data","setData","currency","setCurrency","handleCryptoChange","event","target","value","reloadPrices","curr","fetch","method","then","response","json","console","log","catch","message","width","map","index","abbr","name","height"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { styled } from '@mui/material/styles';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\nimport Box from '@mui/material/Box';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\n\nimport {base, cryptoCurrency} from './common/APIUtils';\nimport './App.css';\n\nconst Item = styled(Paper)(({ theme }) => ({\n  ...theme.typography.body2,\n  padding: theme.spacing(1),\n  textAlign: 'center',\n  color: theme.palette.text.secondary,\n}));\n\nconst App = (props) => {\n  // State Management\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [data, setData] = useState([]);\n  const [currency, setCurrency] = useState('btc');\n\n\n  // Event Functions\n  const handleCryptoChange = (event) => {\n    setCurrency(event.target.value);\n    reloadPrices(event.target.value);\n  };\n\n  function reloadPrices(curr) {\n    fetch(`${base}/compare/${curr}`, {\n      method: 'GET'\n    })\n    .then(response => response.json())\n    .then(data => {\n      setData(data);\n      setIsLoaded(true);\n      console.log(data);\n    })\n    .catch((error) => {\n      setIsLoaded(true);\n      setError(error);\n    });\n  }\n\n  useEffect(() => {\n    reloadPrices(currency);\n  }, []);\n\n\n  // Render Page\n  if (error) {\n    return <div>{error.message}</div>;\n  } else if (!isLoaded) {\n    return <div></div>;\n  } else {\n    return (\n      <div className=\"App\">\n        <h1>\n          Compare Crypto Exchanges\n        </h1>\n        <Box>\n          <FormControl style={{width: '150px'}}>\n            <InputLabel>Crypto Currency</InputLabel>\n            <Select\n              value={currency}\n              label=\"Crypto Currency\"\n              onChange={handleCryptoChange}\n            >\n            {cryptoCurrency.map((data, index) => (\n              <MenuItem key={index} value={data.abbr}>{data.name}</MenuItem>\n            ))}\n            </Select>\n          </FormControl>\n        </Box>\n        <div>Recommendation: </div>\n        <div>\n          Buy: {data['buy']}\n        </div>\n        <div>\n          Sell: {data['sell']}\n        </div>\n        <Button onClick={() => reloadPrices(currency)}>Reload Prices</Button>\n        <Grid container spacing={2} style={{height: '300px'}}>\n          <Grid item xs={6} md={6}>\n            <Item style={{height: '75%'}}>\n              <h2>\n                Coinbase\n              </h2>\n              <div>\n                Buy Price: {data['coinbase']['buy']}\n              </div>\n              <div>\n                Sell Price: {data['coinbase']['sell']}\n              </div>\n            </Item>\n          </Grid>\n          <Grid item xs={6} md={6}>\n            <Item style={{height: '75%'}}>\n              <h2>\n                Crypto.com\n              </h2>\n              <div>\n                Buy Price: {data['crypto']['buy']}\n              </div>\n              <div>\n                Sell Price: {data['crypto']['sell']}\n              </div>\n            </Item>\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}