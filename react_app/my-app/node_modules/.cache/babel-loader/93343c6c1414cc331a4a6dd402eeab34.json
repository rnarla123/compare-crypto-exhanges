{"ast":null,"code":"var _jsxFileName = \"/Users/rahulnarla/Documents/Applications/compare-crypto-exchanges/react_app/my-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\nimport { base } from './common/APIUtils';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Item = styled(Paper)(_ref => {\n  let {\n    theme\n  } = _ref;\n  return { ...theme.typography.body2,\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary\n  };\n});\n\nconst App = props => {\n  _s();\n\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [data, setData] = useState([]);\n  const cryptoCurrency = {\n    'Bitcoin': 'btc',\n    'Ethereum': 'eth'\n  };\n  useEffect(() => {\n    fetch(`${base}/compare/btc`, {\n      method: 'GET'\n    }).then(response => response.json()).then(data => {\n      setData(data);\n      setIsLoaded(true);\n      console.log(data);\n    }).catch(error => {\n      setIsLoaded(true);\n      setError(error);\n    });\n  }, []);\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 12\n    }, this);\n  } else if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: data['buy']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: data['sell']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 5,\n            md: 5,\n            children: /*#__PURE__*/_jsxDEV(Item, {\n              children: \"Coinbase\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 5,\n            md: 5,\n            children: /*#__PURE__*/_jsxDEV(Item, {\n              children: \"Crypto.com\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(App, \"FZxwUA4xt5+cidrm7Dl+G5KOk6M=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/rahulnarla/Documents/Applications/compare-crypto-exchanges/react_app/my-app/src/App.js"],"names":["React","useState","useEffect","styled","Box","Paper","Grid","base","Item","theme","typography","body2","padding","spacing","textAlign","color","palette","text","secondary","App","props","error","setError","isLoaded","setIsLoaded","data","setData","cryptoCurrency","fetch","method","then","response","json","console","log","catch","message"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\n\nimport {base} from './common/APIUtils';\nimport './App.css';\n\nconst Item = styled(Paper)(({ theme }) => ({\n  ...theme.typography.body2,\n  padding: theme.spacing(1),\n  textAlign: 'center',\n  color: theme.palette.text.secondary,\n}));\n\nconst App = (props) => {\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [data, setData] = useState([]);\n\n  const cryptoCurrency = {\n    'Bitcoin': 'btc',\n    'Ethereum': 'eth'\n  }\n\n  useEffect(() => {\n    fetch(`${base}/compare/btc`, {\n      method: 'GET'\n    })\n    .then(response => response.json())\n    .then(data => {\n      setData(data);\n      setIsLoaded(true);\n      console.log(data);\n    })\n    .catch((error) => {\n      setIsLoaded(true);\n      setError(error);\n    });\n  }, []);\n\n  if (error) {\n    return <div>{error.message}</div>;\n  } else if (!isLoaded) {\n    return <div></div>;\n  } else {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <p>\n            {data['buy']}\n          </p>\n          <p>\n            {data['sell']}\n          </p>\n          <Grid container spacing={2}>\n            <Grid item xs={5} md={5}>\n              <Item>\n                Coinbase\n              </Item>\n            </Grid>\n            <Grid item xs={5} md={5}>\n              <Item>\n                Crypto.com\n              </Item>\n            </Grid>\n          </Grid>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}